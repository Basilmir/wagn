# This file is autogenerated. Instead of editing this file, please use the
# migrations feature of ActiveRecord to incrementally modify your database, and
# then regenerate this schema definition.
require_dependency 'db/card_creator.rb'

module ActiveRecord
  class Migrator
    alias_method :ar_set_schema_version, :set_schema_version
    def set_schema_version(version)
      self.send(:ar_set_schema_version, version.to_i == 1 ? 38 : version )
    end
  end
end


class JumpToVersion38 < ActiveRecord::Migration
  
  def self.up
    create_table "cards", :force => true do |t|
      t.column "tag_id", :integer, :null => false
      t.column "parent_id", :integer
      t.column "created_at", :datetime, :null => false
      t.column "value", :string
      t.column "updated_at", :datetime, :null => false
      t.column "locked_by", :integer
      t.column "locked_at", :datetime
      t.column "web_id", :integer, :default => 0, :null => false
      t.column "current_revision_id", :integer
      t.column "name", :string
      t.column "type", :string, :null => false
      t.column "extension_id", :integer
      t.column "extension_type", :string
      t.column "sealed", :boolean, :default => false
    end
    add_index "cards", ["tag_id", "parent_id"], :name => "card_parent_id_tag_id_uniq", :unique => true
    add_index "cards", ["name"], :name => "cards_name_index"
  
    create_table "cardtypes", :force => true do |t|
      t.column "class_name", :string
      t.column "system", :boolean
    end
  
    add_index "cardtypes", ["class_name"], :name => "cardtypes_class_name_uniq", :unique => true
  
    create_table "graveyard", :force => true do |t|
      t.column "name", :string, :null => false
      t.column "content", :string
      t.column "created_at", :datetime, :null => false
    end
  
    create_table "recent_changes", :force => true do |t|
      t.column "card_id", :integer
      t.column "name", :string
      t.column "action", :string, :null => false
      t.column "editor_id", :integer, :null => false
      t.column "note", :string
      t.column "changed_at", :datetime, :null => false
      t.column "grave_id", :integer
    end
  
    create_table "recent_viewings", :force => true do |t|
      t.column "url", :string, :null => false
      t.column "card_id", :integer
      t.column "outcome", :string, :null => false
      t.column "viewer_id", :integer
      t.column "viewer_ip", :string
      t.column "viewed_at", :datetime, :null => false
    end
  
    create_table "revisions", :force => true do |t|
      t.column "created_at", :datetime, :null => false
      t.column "updated_at", :datetime, :null => false
      t.column "revised_at", :datetime, :null => false
      t.column "card_id", :integer, :null => false
      t.column "created_by", :integer, :null => false
      t.column "content", :text, :null => false
    end
  
    add_index "revisions", ["revised_at"], :name => "revisions_revised_at_index"
  
    create_table "roles", :force => true do |t|
      t.column "codename", :string
      t.column "tasks", :string
    end
  
    create_table "roles_users", :id => false, :force => true do |t|
      t.column "role_id", :integer, :null => false
      t.column "user_id", :integer, :null => false
    end
  
    create_table "sessions", :force => true do |t|
      t.column "session_id", :string
      t.column "data", :text
      t.column "updated_at", :datetime
    end
  
    add_index "sessions", ["session_id"], :name => "sessions_session_id_index"
  
    create_table "system", :force => true do |t|
      t.column "password", :string, :limit => 60
    end
  
    create_table "tag_revisions", :force => true do |t|
      t.column "created_at", :datetime, :null => false
      t.column "tag_id", :integer, :null => false
      t.column "created_by", :integer, :null => false
      t.column "name", :string, :null => false
      t.column "revised_at", :datetime, :null => false
      t.column "updated_at", :datetime, :null => false
    end
  
    add_index "tag_revisions", ["revised_at"], :name => "tag_revisions_revised_at_index"
  
    create_table "tags", :force => true do |t|
      t.column "node_id", :integer
      t.column "node_type", :string
      t.column "current_revision_id", :integer
      t.column "datatype", :string, :default => "string", :null => false
      t.column "label", :boolean, :default => false
      t.column "card_count", :integer, :default => 0, :null => false
    end
  
    add_index "tags", ["node_id"], :name => "tags_node_id_index"
    add_index "tags", ["node_id", "node_type"], :name => "tags_node_id_node_type_uniq", :unique => true
    add_index "tags", ["node_type"], :name => "tags_node_type_index"
  
    create_table "users", :force => true do |t|
      t.column "login", :string, :limit => 40
      t.column "email", :string, :limit => 100
      t.column "crypted_password", :string, :limit => 40
      t.column "salt", :string, :limit => 40
      t.column "created_at", :datetime
      t.column "updated_at", :datetime
      t.column "activated_at", :datetime
      t.column "activation_code", :string, :limit => 40
      t.column "invited_by", :integer, :null => false
      t.column "password_reset_code", :string, :limit => 40
    end
  
    create_table "webs", :force => true do |t|
      t.column "created_at", :datetime, :null => false
      t.column "updated_at", :datetime, :null => false
      t.column "name", :string, :limit => 60, :default => "", :null => false
      t.column "address", :string, :limit => 60, :default => "", :null => false
      t.column "password", :string, :limit => 60
      t.column "additional_style", :string
      t.column "allow_uploads", :integer, :default => 1
      t.column "published", :integer, :default => 0
      t.column "count_pages", :integer, :default => 0
      t.column "markup", :string, :limit => 50, :default => "textile"
      t.column "color", :string, :limit => 6, :default => "008B26"
      t.column "max_upload_size", :integer, :default => 100
      t.column "safe_mode", :integer, :default => 0
      t.column "brackets_only", :integer, :default => 0
    end
  
    create_table "wiki_files", :force => true do |t|
      t.column "created_at", :datetime, :null => false
      t.column "updated_at", :datetime, :null => false
      t.column "web_id", :integer, :null => false
      t.column "file_name", :string, :null => false
      t.column "description", :string, :null => false
    end
  
    create_table "wiki_references", :force => true do |t|
      t.column "created_at", :datetime, :null => false
      t.column "updated_at", :datetime, :null => false
      t.column "card_id", :integer, :default => 0, :null => false
      t.column "referenced_name", :string, :limit => nil, :default => "", :null => false
      t.column "referenced_card_id", :integer
      t.column "link_type", :string, :limit => 1, :default => "", :null => false
    end

    add_foreign_key :cards, :tag_id, :tags
    add_foreign_key :cards, :parent_id, :cards
    add_foreign_key :cards, :current_revision_id, :revisions
    add_foreign_key :recent_changes, :card_id, :cards
    add_foreign_key :recent_changes, :editor_id, :users
    add_foreign_key :recent_changes, :grave_id, :graveyard
    add_foreign_key :recent_viewings, :card_id, :cards
    add_foreign_key :revisions, :card_id, :cards
    add_foreign_key :revisions, :created_by, :users
    add_foreign_key :roles_users, :role_id, :roles
    add_foreign_key :roles_users, :user_id, :users
    add_foreign_key :tag_revisions, :tag_id, :tags
    add_foreign_key :tags, :current_revision_id, :tag_revisions
    add_foreign_key :users, :invited_by, :users
    add_foreign_key :wiki_references, :card_id, :cards
    add_foreign_key :wiki_references, :referenced_card_id, :cards
     
    
    class << self
      include CardCreator
    end

    #password w8gn8t0r    
    MUser.create!( 
      :login => 'admin',
      :crypted_password => '6e18b8a0b17799cb6d4a10b6dd1e870b073051b1',
      :salt => 'bf2a748b23e6fc6fa64d5acb99df8e72e308c58c',
      :email => 'webmaster@grasscommons.org',
      :invited_by=>1, 
      :activated_at=>nil
    )
    
    MUser.create!( 
      :login => 'hoozebot',
      :crypted_password => '13d124f96e2953fea135c13df097fb3d754588be',
      :salt => 'c420fa40c65a38186deb25ba859edacd9bf7d8f8',
      :email => 'hoozebot@grasscommons.org',
      :activated_at=>Time.now(),
      :invited_by=>1
    )

    MWeb.create!(
      :name => 'wiki',
      :address => 'wiki'
    )
      
    create_user_card( 'Hooze Bot', 'hoozebot')
    create_user_card( 'Admin', 'admin' )
    
    create_cardtype_card 'Basic'
    #create_cardtype_card 'Connection'
    create_cardtype_card 'User'
    create_cardtype_card 'Cardtype'
    create_cardtype_card 'Company'

    create_cardtype_card 'Role'
    
    create_role_card 'Anonymous User', 'anon'
    create_role_card 'Authenticated User', 'auth'
    create_role_card 'Administrative User', 'admin'

    admin_role = MRole.find_by_codename('admin')
    
    admin_role.m_users << %w{ hoozebot admin }.map do |login| 
      MUser.find_by_login login
    end
     
    create_card 'Basic', System.site_name, "To get started, you need to " +
      "<a href=\"/admin/setup\">setup the admin account</a>.  After that, you'll want to edit " + 
      "this frontpage card"
    
  end
  
  
  def self.down
    raise IrreversibleMigration
  end
      
end
