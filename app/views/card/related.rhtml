<%
  sources = [card.cardtype.name,nil]
  sources.unshift '*account' if card.extension_type=='User' 
  items = sources.map do |root| 
    c = CachedCard[(root ? "#{root}+" : '') +'*context']
    c && c.type=='Pointer' && c.pointees
  end.flatten.compact
  items<<'config' if card.simple? || card.is_a?(Card::Basic)
  current = params[:attribute] || items.first.to_key

  get_slot.wrap(:related) do |slot| %>
	<%= slot.header %>

	<% div(:class=>'submenu') do
	   items.each do |item|
	     key = item.to_key %>
       <%= link_to_remote( item, 
          { :url=>slot.url_for("card/related", nil, key), :update => slot.id }, 
          :class=>(key==current ? 'on' : '') 
        ) %>
    <% end %>
	<% end %>
	<%= slot.notice %>  

	<div class="open-content related headroom">
	  <% if current=='config' %>
	    <%= slot.expand_transclusions render(:partial=>'config') %>
	  <% else %>
   	  <%= render_card( "#{card.name}+#{current}", :content ) %>
   	<% end %>
	</div>
	
	<%= javascript_tag("setupLinksAndDoubleClicks();") %>

<% end %>
