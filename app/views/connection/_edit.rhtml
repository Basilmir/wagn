<%# FIXME: this one's prolly busted %>   
<% render_slot ||= nil %>
<%# get_slot(card)tname('related', render_slot.nil? ? !request.xhr? : render_slot ) do |slot| %>
<% get_slot(card).wrap('related', :is_slot =>(render_slot.nil? ? !request.xhr? : render_slot )) do |slot| %>
	<% form_remote_for :card, card, :url=>slot.url_for('connection/update'),
	 		:html=>{ :class=>'form',:onsubmit=>slot.save_function	 } do |f| %>

		<div class="edit-area">
	 		<table>
					<tr>
						<td>
					    <span class="title inline">
						    <%= less_fancy_title(card) %>
					  	</span>
						</td>
						<td>
							<span class="cardtype inline">
							  <%# fixme - we should have this sending over new_record as a param -- otherwise we lose one remove button %>
								<% if card.ok? :type %>
	 								<%= slot.cardtype_field f, :onchange=>slot.update_cardtype_function(
	 										  :url=>slot.url_for("connection/edit"), :update=>slot.parent,
	 											:with=>"Form.serialize(getSlotElement(this,'form'))" 
	 								) %>
	 							<% end %>
							</span>
						</td>
					</tr>
				</table>

		  <%# if Card::User===@trunk and @trunk.extension==User.current_user %>
		    <%#= check_box_tag 'personal_sidebar' %><!-- noteMake this a personal card.</br> -->
		  <%# end %>

			<span class="editor">
				<%= slot.content_field f %>
			</span>
	 		<div style="float:right">
	 			<%= button_to_remote "Remove #{card.name}", :url=>slot.url_for("connection/remove")	%>
	 			<% if @new_tag %>
	 				<%= button_to_remote "Remove both #{card.tag.name} and #{card.name}", 		
	 						:url=>slot.url_for("connection/remove_tag")	%>
	 			<% end %>
	 		</div>

			<%= button_to_function 'Save', "this.form.onsubmit()", :id=>'save-connection' %>
			<%#= link_to_function "Cancel", "$('connections-workspace').innerHTML=''" %>
		</div>  
	
	<% end %>                                                   
<% end %>
