<%
   args={}
   slot ||= get_slot(card)
   [:add_slot, :home_view].each {|x| args[x] = params[x] if params[x]}
   # when new is called from an "Add <Cardname>" inclusion, there is no existing slot,
   #  so we pass an argument to create one.  eventually, the "Add <Cardname>" view should have
   #  a slot so that this isn't necessary
%>

<% wrap_slot(slot, args) do |s| %>
    <% @title = "New Card" %>
    <%= error_messages_for :card %>
    <div class=cardnotice></div>

    <% form_for_card(:url=>"card/create",
          :slot => s,
          :update => {:success => s.id, :failure => s.id(:cardnotice)},
          :html=>{:class=>'form', :onsubmit=>s.save_function}) do |form| %>

      <div class="card-header">
        <% if (request and !request.xhr?) && @args[:type] #&& !card.broken_type %>
          <%= hidden_field_tag 'card[type]', @args[:type] %>
        <% else %>
          <span class="new-type">
            <span class="label"> type:</span>
            <%= s.typecode_field form, :onchange=>s.update_typecode_function(
                  :url=>s.url_for('card/new'), :update=>s.id,
                  :with=>"Form.serialize(getSlotElement(this,'form'))"
            ) %>
          </span>
        <% end %>

        <span class="new-name">
          <span class="label">name:</span>
          <% if card.cardname.blank? || Card.fetch(card.cardname)%>
            <span class="name-area">
              <%= s.name_field(form) %>
            </span>
          <% else %>
            <%= form.hidden_field :name %>
            <span class="title">
              <%= fancy_title(card.name) %>
            </span>
          <% end %>
        </span>
      </div>
      <% if inst=card.setting_card('add help', 'edit help') and params[:view]!='setting' %>
        <div class="instruction"><%= s.subrenderer(inst).render_naked %></div>
      <% end %>


      <div class="edit-area">
        <div class="editor">
          <% #FIXME CONTENT: the hard template test can go away when we phase out the old sytem %>
          <% if card.content_template %>
            <%= s.render(:multi_edit) %>
          <% else %>
            <%= s.content_field(form) %>
          <% end %>
        </div>

        <%= s.captcha_tags %>
        <%= hidden_field_tag :home_view, params[:home_view] || :open %>
        <div class="edit-button-area">

          <%= button_to_function 'Submit', "this.form.onsubmit()", :id=>'create-button'  %>

          <% if s.ajax_call? %>
            <%= s.button_to_action 'Cancel', 'view', { :before=>s.cancel_function }  %>
          <% else %>
            <%= button_to_function 'Cancel',"document.location.href='#{previous_location}'" %>
        <% end %>
        </div>
      </div>
    <% end %>

  <%= s.notice %>
<% end %>

